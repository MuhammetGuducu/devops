name: Vorschau - Tempor√§re Umgebung deployen

on:
  pull_request:
    types: [opened, synchronize, closed]

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  AWS_REGION: eu-central-1

jobs:
  deploy-preview:
    name: Job - Vorschau deployen/zerst√∂ren
    runs-on: ubuntu-latest
    steps:
      - name: Code auschecken
        uses: actions/checkout@v4

      - name: AWS-Zugangsdaten konfigurieren
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Node.js einrichten
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      # Build & Test nur wenn PR nicht geschlossen2
      - name: App-Tests ausf√ºhren
        if: github.event.action != 'closed'
        run: |
          npm ci
          npm test

      - name: Bei Amazon ECR anmelden
        if: github.event.action != 'closed'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: ECR Repository sicherstellen
        if: github.event.action != 'closed'
        run: |
          # Check if repository exists, create if not
          aws ecr describe-repositories \
              --repository-names devops-demo-preview-shared \
              --region ${{ env.AWS_REGION }} 2>/dev/null || \
          aws ecr create-repository \
              --repository-name devops-demo-preview-shared \
              --region ${{ env.AWS_REGION }}

      - name: Docker-Image bauen & pushen
        if: github.event.action != 'closed'
        run: |
          ECR_REGISTRY="${{ steps.login-ecr.outputs.registry }}"
          ECR_REPOSITORY="devops-demo-preview-shared"
          
          docker build \
            --build-arg VERSION="preview-pr${{ github.event.number }}" \
            --build-arg COMMIT_SHA=${{ github.sha }} \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:pr-${{ github.event.number }} .
          
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:pr-${{ github.event.number }}

      - name: CDK Stack deployen
        if: github.event.action != 'closed'
        working-directory: ./infra
        run: |
          npm ci
          npm run build
          npx cdk deploy \
            --context pr_number=${{ github.event.number }} \
            --context ecr_repository=$ECR_REPOSITORY \
            --context image_tag=pr-${{ github.event.number }} \
            --require-approval never \
            --outputs-file ../cdk-outputs.json

      - name: Auf App Runner Deployment warten
        if: github.event.action != 'closed'
        run: |
          echo "‚è≥ Warte 90 Sekunden auf App Runner Deployment..."
          sleep 90

      - name: Service Status pr√ºfen
        if: github.event.action != 'closed'
        run: |
          SERVICE_ARN=$(aws apprunner list-services \
            --query "ServiceSummaryList[?ServiceName=='devops-demo-preview-pr-${{ github.event.number }}'].ServiceArn" \
            --output text)
          
          if [ -n "$SERVICE_ARN" ]; then
            STATUS=$(aws apprunner describe-service \
              --service-arn $SERVICE_ARN \
              --query "Service.Status" \
              --output text)
            echo "Service Status: $STATUS"
          fi

      - name: URL im Pull Request posten
        if: github.event.action != 'closed'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.number }}
          body: |
            ## üöÄ Preview Environment
            
            **Status:** ‚úÖ Bereit  
            **URL:** $(jq -r '.["BachelorPreviewStack-PR${{ github.event.number }}"].ServiceURL' cdk-outputs.json)
            **Version:** preview-pr${{ github.event.number }}  
            
            Die Preview-Umgebung wird automatisch gel√∂scht, wenn der PR geschlossen wird.

      - name: Stack zerst√∂ren
        if: github.event.action == 'closed'
        working-directory: ./infra
        run: |
          npm ci
          npm run build
          npx cdk destroy \
            --context pr_number=${{ github.event.number }} \
            --force